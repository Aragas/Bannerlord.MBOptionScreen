# Will only be triggered on the master branch by any workflow that uses repository dispatch
name: GitHub Release

on:
  repository_dispatch:
    types:
      - publish-on-github

jobs:
  publish-on-github:
    name: GitHub publish requested by ${{github.event.client_payload.github.workflow}} workflow
    runs-on: ubuntu-latest
    if: github.repository == ${{github.event.client_payload.github.repository}}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 3.1.300

    - name: Setup BUTR GPR
      uses: actions/setup-dotnet@master
      with:
        source-url: https://nuget.pkg.github.com/BUTR/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Build MCM (Release)
      run: >-
        dotnet build MCM.Standalone/MCM.Standalone.csproj --configuration Release -p:GameFolder="$PWD/bannerlord";
        dotnet build MCM.Implementation.MBO/MCM.Implementation.MBO.csproj --configuration Release -p:GameFolder="$PWD/bannerlord";
        dotnet build MCM.Implementation.ModLib/MCM.Implementation.ModLib.csproj --configuration Release -p:GameFolder="$PWD/bannerlord";
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1

    - name: Zip MCM.Standalone
      run: 7z a -tzip MCM.Standalone.zip ./bannerlord/*

    - name: Install Bannerlord.ChangelogParser and Bannerlord.NexusmodsUploader
      run: dotnet tool install -g Bannerlord.ChangelogParser; dotnet tool install -g Bannerlord.NexusmodsUploader
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1

    - name: Run ChangelogParser
      id: changelog
      run: |
        vers="$(bannerlord_changelog_parser getversion -f "$PWD/changelog.txt")"
        echo "::set-output name=mod_version::$vers"
        desc="$(bannerlord_changelog_parser getdescription -f "$PWD/changelog.txt")"
        desc="${desc//'%'/'%25'}"
        desc="${desc//$'\n'/'%0A'}"
        desc="${desc//$'\r'/'%0D'}"
        echo "::set-output name=mod_description::$desc"

    #- name: Create Release
    #  uses: actions/create-release@v1
    #  id: create_release
    #  with:
    #    tag_name: v${{steps.changelog.outputs.mod_version}}
    #    release_name: Release ${{steps.changelog.outputs.mod_version}}
    #    body: ${{steps.changelog.outputs.mod_description}}
    #    draft: false
    #    prerelease: false
    #  env:
    #    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    #- name: Upload Release Asset
    #  id: upload-release-asset 
    #  uses: actions/upload-release-asset@v1
    #  with:
    #    upload_url: ${{steps.create_release.outputs.upload_url}}
    #    asset_path: ./MCM.Standalone.zip
    #    asset_name: MCM.Standalone.zip
    #    asset_content_type: application/zip
    #  env:
    #    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
