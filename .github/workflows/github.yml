# Will only be triggered on the master branch by any workflow that uses repository dispatch
name: GitHub Release

on:
  push:
    branches: 
      - v3_github
  repository_dispatch:
    types:
      - publish-on-github

jobs:
  publish-on-github:
    name: GitHub publish requested by ${{github.event.client_payload.github.workflow}} workflow
    runs-on: ubuntu-latest
    if: github.repository == ${{github.event.client_payload.github.repository}}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 3.1.300
        source-url: https://nuget.pkg.github.com/BUTR/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 3.1.300
        source-url: https://nuget.pkg.github.com/Aragas/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Build MCM.Standalone (Release)
      run: dotnet build MCM.Standalone/MCM.Standalone.csproj --configuration Release -p:GameFolder="$pwd/bannerlord" -p:GITHUB_ACTIONS="false"
      shell: pwsh

    - name: Build MCM.Implementation.MBO (Release)
      run: dotnet build MCM.Implementation.MBO/MCM.Implementation.MBO.csproj --configuration Release -p:GameFolder="$pwd/bannerlord" -p:GITHUB_ACTIONS="false"
      shell: pwsh

    - name: Build MCM.Implementation.ModLib (Release)
      run: dotnet build MCM.Implementation.ModLib/MCM.Implementation.ModLib.csproj --configuration Release -p:GameFolder="$pwd/bannerlord" -p:GITHUB_ACTIONS="false"
      shell: pwsh

    - name: Zip MCM.Standalone
      run: 7z a -tzip MCM.Standalone.zip ./bannerlord/*

    - name: Install Bannerlord.ChangelogParser and Bannerlord.NexusmodsUploader
      run: dotnet tool install -g Bannerlord.ChangelogParser; dotnet tool install -g Bannerlord.NexusmodsUploader
      shell: pwsh

    - name: Run ChangelogParser
      id: changelog
      run: >-
        Write-Output "::set-output name=mod_version::$(bannerlord_changelog_parser getversion -f "$pwd/changelog.txt")";
        Write-Output "::set-output name=mod_description::$(bannerlord_changelog_parser getdescription -f "$pwd/changelog.txt")";
      shell: pwsh

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        tag_name: v${{steps.changelog.outputs.mod_version}}
        release_name: Release ${{steps.changelog.outputs.mod_version}}
        body: ${{steps.changelog.outputs.mod_description}}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./MCM.Standalone.zip
        asset_name: MCM.Standalone.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
